(window.webpackJsonp=window.webpackJsonp||[]).push([[399],{743:function(a,t,s){"use strict";s.r(t);var n=s(0),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("Docker 安装 MongoDB")]),a._v(" "),t("h2",{attrs:{id:"_1-取最新版的-mongodb-镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-取最新版的-mongodb-镜像"}},[a._v("#")]),a._v(" 1，取最新版的 MongoDB 镜像")]),a._v(" "),t("ul",[t("li",[a._v("这里我们拉取官方的最新版本的镜像：")]),a._v(" "),t("li",[a._v("$ docker pull mongo:latest")])]),a._v(" "),t("h2",{attrs:{id:"_2-运行镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-运行镜像"}},[a._v("#")]),a._v(" 2，运行镜像")]),a._v(" "),t("ul",[t("li",[a._v("下载完成后，我们可以使用以下命令来运行 mongo 容器：")]),a._v(" "),t("li",[a._v("$ docker run -itd --name mongo -p 27017:27017 mongo --auth\n参数说明：")]),a._v(" "),t("li",[a._v("-p 27017:27017 ：映射容器服务的 27017 端口到宿主机的 27017 端口。外部可以直接通过 宿主机 ip:27017 访问到 mongo 的服务。")]),a._v(" "),t("li",[a._v("--auth：需要密码才能访问容器服务。")])]),a._v(" "),t("h2",{attrs:{id:"_3-安装成功"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-安装成功"}},[a._v("#")]),a._v(" 3，安装成功：")]),a._v(" "),t("ul",[t("li",[a._v("最后我们可以通过 docker ps 命令查看容器的运行信息：")]),a._v(" "),t("li",[a._v("接着使用以下命令添加用户和设置密码，并且尝试连接。")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ docker exec -it mongo mongo admin\n# 创建一个名为 admin，密码为 123456 的用户。\n>  db.createUser({ user:'root',pwd:'root',roles:[ { role:'userAdminAnyDatabase', db: 'admin'},\"readWriteAnyDatabase\"]});\n# 尝试使用上面创建的用户信息进行连接。\n> db.auth('root', 'root')\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);